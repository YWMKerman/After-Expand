@Kopernicus:FOR[AfterSolarSystemExpand]
{
	useOnDemand = True					// 按需加载，需要开启优化天体性能。
    Body
    {
        name =  						// 天体名字,必须英文，最好不要有字符。
		finalizeOrbit =  				// 确定轨道的，由于kopernicus没办法模拟开普勒平均运动，不能开启。
        randomMainMenuBody = 			// 天体是否可以出现在主菜单背景的，不建议启用。
		identifier = 					// 天体配属，例如假设冥王星，则是"SolarSystem/Pluto" 一般前面是 “所属恒星系统/行星名字" 			
		cacheFile =  					// 天体缓存文件， 一般建议类似这样“AfterSolarSystemExpand/System/XX_XXXX/Cache/(天体名字).bin
        Template
        {
            name = Sun					// 模板，不需要管
			removeCoronas = true		// 移除日珥，因为日珥不好看 所以不要。
        }
		Orbit
        {  
			mode = 				       OFF  			// 关闭轨道UI显示，因为恒星是独立的，所以不需要显示轨道
			referenceBody = 	       Sun  			// 这个不能改动。
			semiMajorAxis = 	 	   3.3945E+17  		// 恒星与太阳的距离。
			eccentricity = 		 	   0.0000E+00       // 不用管。 
            inclination = 			   7.9985E+00		// 可以控制恒星的位置。

			longitudeOfAscendingNode = 1.0500E+02       // 可以控制恒星的位置。
			argumentOfPeriapsis =      1.9100E+02 		// 可以控制恒星的位置。
			meanAnomalyAtEpoch = 	   3.9652E+00		// 可以控制恒星的位置。
			epoch = 				   0.0000E+00		// 不用管。 

			period =                   9.9999E+99      // 固定位置

			color = 			 	   RGB(255,244.90,231.47)	// 控制恒星图标的颜色，一般根据恒星色温来设置。
			iconTexture = AfterSolarSystemExpand/Textures/PluginData/Star_icon.dds		// 恒星图标的样式，用来分辨是一般恒星还是矮星
        }
        Properties
        {
			displayName = 		// 恒星的本土化显示名字，这个允许中文
			description = 		// 恒星的信息栏目介绍 允许中文。

			rotationPeriod =     				// 自转周期，采用单位 秒。
			mass =								// 质量 单位千克	
			radius = 							// 半径 单位 米
			sphereOfInfluence = 				// 希尔球半径 单位米，一般推荐按恒星质量设置，例如0.1个太阳质量，则0.1ly 这样 简单。 
			biomeMap = AfterSolarSystemExpand/Textures/Star/Moryan/Moryan_Biomes.dds
			ScienceValues
			{
				recoveryValue =  				// 航天器从恒星系统返回时候得到的科技点倍率。 一般推荐40-90之间

				flyingLowDataValue =  			// 航天器在恒星底层大气层飞行时候得到的科技点。	一般推荐40-90之间

				flyingHighDataValue =  			// 航天器在恒星大气层飞行时候得到的科技点。	一般推荐40-90之间

				inSpaceLowDataValue =  			// 航天器在恒星低轨道飞行时候得到的科技点。	一般推荐40-90之间

				inSpaceHighDataValue =  		// 航天器在恒星高轨道飞行时候得到的科技点。	一般推荐40-90之间

				flyingAltitudeThreshold =  		// 定义恒星底层大气与高层大气之间的阈值（需要游戏里按情况设置）

				spaceAltitudeThreshold =   		// 定义恒星低轨道与高轨道的阈值，推荐宇宙沙盘（universe sandbox）模拟。
			}
        }
		Atmosphere								// 大气层生成，必须要文件夹中的大气层生成工具生成，不要瞎弄。		
		{				


		}								
        ScaledVersion							// 控制恒星色温，亮度方面。
		{
			Material
			{		
				emitColor0 =  		//控制恒星色温，一般按恒星真实色温设置
				emitColor1 =  		//控制恒星色温，一般按恒星真实色温设置

				rimColor =  		//控制恒星色温，一般按恒星真实色温设置
				
			}
			Light
			{	
				luminosity =  							// 要确定这个值的办法是，用一个有太阳能板的飞船debug在恒星宜居带的轨道上，调这个值，直到太阳能板接受的能量在 1 的水平
				sunAU = 	// 恒星的宜居带范围，要用universe sandbox准确模拟，不得瞎弄
				givesOffLight = true	// 控制恒星是否发光，正常情况下开启。

				scaledSunlightColor =   //控制恒星发出来的光的颜色，一般与恒星色温对应，一般按恒星真实色温设置
                IVASunColor = 			//控制恒星发出来的光的颜色，一般与恒星色温对应，一般按恒星真实色温设置
                sunlightColor = 		//控制恒星发出来的光的颜色，一般与恒星色温对应，一般按恒星真实色温设置	


				IntensityCurve
				{
					// 使用文件夹中的光强生成器生成，一般情况下亮度为1的地方为宜居带内边缘，亮度为0的地方需要用universesandbox 关闭太空护目镜后准确的生成一颗对应质量，半径 色温的恒星进行模拟，
					// 不断拉远行星的轨道，直到行星完全漆黑的半长轴，既为0

				}
				ScaledIntensityCurve
				{
					// 使用文件夹中的光强生成器生成，一般情况下亮度为1的地方为宜居带内边缘，亮度为0的地方需要用universesandbox 关闭太空护目镜后准确的生成一颗对应质量，半径 色温的恒星进行模拟，
					// 不断拉远行星的轨道，直到行星完全漆黑的半长轴，既为0
				}
				IVAIntensityCurve
				{
					// 使用文件夹中的光强生成器生成，一般情况下亮度为1的地方为宜居带内边缘，亮度为0的地方需要用universesandbox 关闭太空护目镜后准确的生成一颗对应质量，半径 色温的恒星进行模拟，
					// 不断拉远行星的轨道，直到行星完全漆黑的半长轴，既为0
				}
				brightnessCurve
				{
					// 使用文件夹中的亮度生成器生成，依据恒星半径，宜居带内边缘的半长轴生成
				} 
            }
		}
    }
}



















